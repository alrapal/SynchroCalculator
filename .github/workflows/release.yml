name: Package for Windows and MacOS

on:
  release:
    types: ['published']

jobs:
  package-mac:
    runs-on: macos-latest

    env:
      # We retrieve the release tag created with the env variable
      VERSION: ${{ github.ref_name }}

    steps:
      # Checkout the repo to allow access for the workflow
      - uses: actions/checkout@v3
      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: maven
        # Build the jar that will be used by jpackage
      - name: Update Module Version
        # Use the versions-maven-plugin to set the module version using GitHub variables
        run: |
          echo ${VERSION}
          mvn versions:set -DnewVersion=${VERSION}
      - name: Build jar
        run: mvn clean install
      # Build the JRE used by jpackage
      - name: Build JRE image
        run: mvn javafx:jlink
      # Package the app using the icon path given as a parameter
      - name: Package app as dmg
        # Run script with arguments for the icon to use and the version number from GitHub environment variables
        run: sh CI-tools/package.sh "icons/icon.icns" $VERSION
        # Revert the module version for cleanness
      - name: Revert module version
        run: mvn versions:revert
        # Save the .dmg created as release asset
      - name: Release Package
        uses: softprops/action-gh-release@v1
        with:
          files: |
            *.dmg
            LICENCE.md
            README.md